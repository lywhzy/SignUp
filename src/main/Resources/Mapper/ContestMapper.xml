<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hbue.it.mapper.ContestMapper">
  <resultMap id="BaseResultMap" type="hbue.it.pojo.Contest">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="characterization" jdbcType="VARCHAR" property="characterization" />
    <result column="attachment" jdbcType="INTEGER" property="attachment" />
    <result column="begindate" jdbcType="DATE" property="begindate" />
    <result column="enddate" jdbcType="DATE" property="enddate" />
  </resultMap>
  <resultMap id="getContestMap" type="Contest">
    <id column="id" property="id"></id>
    <result column="name" property="name"></result>
    <result column="characterization" property="characterization"></result>
    <result column="attachment" property="attachment"></result>
    <result column="begindate" property="begindate"></result>
    <result column="enddate" property="enddate"></result>
    <collection property="users" ofType="User">
      <id column="id" property="id"></id>
      <result column="name" property="name"></result>
      <result column="phoneNumber" property="phoneNumber"></result>
      <result column="email" property="email"></result>
      <result column="password" property="password"></result>
      <result column="level" property="level"></result>
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, name, characterization, attachment, begindate, enddate
  </sql>
  <select id="selectByExample" parameterType="hbue.it.pojo.ContestExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from contest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from contest
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from contest
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="Id" keyProperty="id" parameterType="hbue.it.pojo.Contest" useGeneratedKeys="true">
    insert into contest (name, characterization, attachment, 
      begindate, enddate)
    values (#{name,jdbcType=VARCHAR}, #{characterization,jdbcType=VARCHAR}, #{attachment,jdbcType=INTEGER}, 
      #{begindate,jdbcType=DATE}, #{enddate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" keyColumn="Id" keyProperty="id" parameterType="hbue.it.pojo.Contest" useGeneratedKeys="true">
    insert into contest
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="characterization != null">
        characterization,
      </if>
      <if test="attachment != null">
        attachment,
      </if>
      <if test="begindate != null">
        begindate,
      </if>
      <if test="enddate != null">
        enddate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="characterization != null">
        #{characterization,jdbcType=VARCHAR},
      </if>
      <if test="attachment != null">
        #{attachment,jdbcType=INTEGER},
      </if>
      <if test="begindate != null">
        #{begindate,jdbcType=DATE},
      </if>
      <if test="enddate != null">
        #{enddate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="hbue.it.pojo.Contest">
    update contest
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="characterization != null">
        characterization = #{characterization,jdbcType=VARCHAR},
      </if>
      <if test="attachment != null">
        attachment = #{attachment,jdbcType=INTEGER},
      </if>
      <if test="begindate != null">
        begindate = #{begindate,jdbcType=DATE},
      </if>
      <if test="enddate != null">
        enddate = #{enddate,jdbcType=DATE},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="hbue.it.pojo.Contest">
    update contest
    set name = #{name,jdbcType=VARCHAR},
      characterization = #{characterization,jdbcType=VARCHAR},
      attachment = #{attachment,jdbcType=INTEGER},
      begindate = #{begindate,jdbcType=DATE},
      enddate = #{enddate,jdbcType=DATE}
    where Id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="getContestMap">
      select  c.* from contest c,user_contest uc,status s where uc.uid=#{uid} and uc.cid=c.id and s.cid=c.id and s.display=true
  </select>

  <delete id="deleteContestRelation">
      delete from user_contest where #{cid}=cid and #{uid}=uid
  </delete>

  <select id="getTopCharacterization" resultType="Contest">
      select c2.* from contest c2,user_contest uc where c2.id=uc.cid and c2.enddate>now() group by c2.id order by count(c2.id) desc limit 0,3
  </select>
</mapper>